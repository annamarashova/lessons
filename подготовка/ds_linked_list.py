from llist import sllist


def linked_list_example():
    """Создать пример связанного списка.

    Односвязный список:
        head
        |
        first -> second -> third -> None

    Двухсвязный список:
        head
        |
        first -> second -> third -> None
                            |
                           tail

    Отличия от массива

    Поиск элемента:
    В массиве мы могли бы сразу получить любой элемент по индексу.
    А в связанном списке чтобы получить значение, например, второго элемента, мы должны "дойти" до него от первого.

    Удаление элемента:
    Чтобы удалить элемент из центра массива, нам придется двигать остальные элементы, иначе образуется "дырка".
    В связанном списке, чтобы удалить второй элемент, достаточно сделать так, чтобы первый элемент указывал на третий.

    Добавление:
    Чтобы добавить элемент в центр массива, мы должны сдвигать все остальные элементы.
    Чтобы добавить элемент между вторым и третьим, достаточно сделать так, чтобы второй элемент ссылался на новый, а новый -- на третий.

    :return:
    """
    linked_list = sllist()
    linked_list.append("first")
    linked_list.append("second")
    linked_list.append("third")

    print(linked_list)


if __name__ == '__main__':
    linked_list_example()
